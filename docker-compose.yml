version: '3.8'

services:
  postgres:
    image: postgres
    container_name: postgres-db
    environment:
      POSTGRES_DB: springboot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: jihane
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - spring-data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  voiture-app-backend:
    image: spring-data-rest
    container_name: spring-data-rest
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: jihane
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - spring-data

  voiture-front-end:
    image: reactjs-frontend
    container_name: reactjs-frontend
    ports:
      - "3000:80"
    networks:
      - spring-data

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - voiture-app-backend
    networks:
      - spring-data

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    environment:
        - GF_SECURITY_ADMIN_USER=admin
        - GF_SECURITY_ADMIN_PASSWORD=admin123
    depends_on:
      - prometheus
    networks:
      - spring-data

volumes:
  pgdata:

networks:
  spring-data:
