pipeline {
    agent any

    environment {
        DOCKER_IMAGE_FRONTEND = 'reactjs-frontend'
        DOCKER_IMAGE_BACKEND = 'spring-data-rest'
        DOCKER_CREDENTIALS = 'Docker-credentials' // Jenkins credentials ID for Docker Hub
    }

    stages {
        stage('Checkout Source Code') {
            steps {
                checkout scm
            }
        }

        stage('Build Backend') {
            steps {
                script {
                    bat './mvnw clean install'
                    bat "docker build -t %DOCKER_IMAGE_BACKEND% ."
                }
            }
        }

        stage('Build Frontend') {
            steps {
                script {
                    // Navigate to frontend directory, install dependencies, and build React app
                   bat 'cd src/main/webapp/reactjs && npm install && set CI=false  npm run build'
                   bat "docker build -t %DOCKER_IMAGE_FRONTEND% ."

                }
            }
        }

        stage('Login to Docker') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        bat "docker login -u %DOCKER_USERNAME% -p %DOCKER_PASSWORD%"
                    }
                }
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                script {
                    // Start the containers using Docker Compose
                    bat "docker-compose up -d"
                }
            }
        }
    }

    post {
        always {
            cleanWs() // Clean up workspace
        }
    }
}
