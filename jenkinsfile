pipeline {
    agent any

    environment {
        DOCKER_IMAGE_FRONTEND = 'reactjs-frontend'
        DOCKER_IMAGE_BACKEND = 'spring-data-rest'
        DOCKER_CREDENTIALS = 'Dockerhub-credentials' // Jenkins credentials ID for Docker Hub
    }

    stages {
        stage('Clone Repository') {
            steps {
                git 'https://github.com/ZJihane/SpringDataRest.git'
            }
        }

        stage('Build Backend') {
            steps {
                script {
                    // Using batch command (bat) instead of sh for Windows
                    bat 'cd backend && ./mvnw clean install'
                    bat "docker build -t %DOCKER_IMAGE_BACKEND% ./backend"
                }
            }
        }

        stage('Build Frontend') {
            steps {
                script {
                    // Build the React app (using npm)
                    bat 'cd frontend && npm install && npm run build'
                    bat "docker build -t %DOCKER_IMAGE_FRONTEND% ./frontend"
                }
            }
        }

        stage('Docker Login') {
            steps {
                script {
                    // Docker login with Jenkins stored credentials (ensure credentials are set correctly)
                    withCredentials([usernamePassword(credentialsId: 'Dockerhub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        bat "echo %DOCKER_PASSWORD% | docker login -u %DOCKER_USERNAME% --password-stdin"
                    }
                }
            }
        }



        stage('Deploy with Docker Compose') {
            steps {
                script {
                    // Start the containers using Docker Compose
                    bat "docker-compose up -d"
                }
            }
        }
    }

    post {
        always {
            cleanWs() // Clean up workspace
        }
    }
}
