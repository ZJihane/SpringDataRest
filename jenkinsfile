pipeline {
    agent any

    environment {
        DOCKER_IMAGE_FRONTEND = 'reactjs-frontend'
        DOCKER_IMAGE_BACKEND = 'spring-data-rest'
        DOCKER_CREDENTIALS = 'Dockerhub-credentials' // Jenkins credentials ID for Docker Hub
    }

    stages {
         stage('Checkout Source Code') {
                    steps {
                        checkout scm
                    }
                }

        stage('Build Backend') {
            steps {
                script {
                    // Using batch command (bat) instead of sh for Windows
                    bat 'cd backend && ./mvnw clean install'
                    bat "docker build -t %DOCKER_IMAGE_BACKEND% ./backend"
                }
            }
        }

        stage('Build Frontend') {
            steps {
                script {
                    // Build the React app (using npm)
                    bat 'cd frontend && npm install && npm run build'
                    bat "docker build -t %DOCKER_IMAGE_FRONTEND% ./frontend"
                }
            }
        }

         stage('Login to Docker') {
                   steps {
                       script {
                           withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                               bat "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
                           }
                       }
                   }
               }



        stage('Deploy with Docker Compose') {
            steps {
                script {
                    // Start the containers using Docker Compose
                    bat "docker-compose up -d"
                }
            }
        }
    }

    post {
        always {
            cleanWs() // Clean up workspace
        }
    }
}
